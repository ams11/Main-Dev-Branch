- content_for :head do
  :javascript
    $(function() {
      var initial_product_type = $('#mproduct_product_type option:selected').val();
      //alert('initial_product_type = ' + initial_product_type);

      $('select[id^="pc-"]').change(function() {
        //alert('product_category changed to ' + $(this).val());
        $('#mproduct_product_category').val($(this).val())
      });

      showCategory(initial_product_type);

      $('#mproduct_product_type').change(function() {
        //alert('product_type changed to ' + $(this).val());
        showCategory($(this).val());
      });
    });

    function showCategory(pt) {
      $('select[id^="pc-"]').hide();
      $('select[id$="' + pt + '"]').show();
      setSelectedCategory(pt);
    }
    
    function setSelectedCategory(pt) {
      //alert('setSelectedCategory = ' + pt);
      //alert('selectedCategory = ' + $('#mproduct_product_category').val());

      var selector = 'select[id$="' + pt + '"]';
      var valueSelector = 'option[value="' + $('#mproduct_product_category').val() + '"]';
      var index0Selector = 'option:first';

      //alert('selector = ' + selector);
      //alert('valueSelector = ' + valueSelector);
      //alert('index0Selector = ' + index0Selector);
      
      $(selector).removeAttr('selected');

      if ( $(selector).is(valueSelector) ) {
        //alert('option found')
        $(selector + ' ' + valueSelector).attr('selected','selected');
        $('#mproduct_product_category').val($(selector + ' ' + valueSelector).val())
       }
       else {
        //alert('option not found');
        $(selector + ' ' + index0Selector).attr('selected','selected');
        $('#mproduct_product_category').val($(selector + ' ' + index0Selector).val())
      }
    }

%p= "current_action = #{@current_action}"
    
= form_for @mproduct do |f|
  -if @mproduct.errors.any?
    #error_explanation
      %h2= "#{pluralize(@mproduct.errors.count, "error")} prohibited this mproduct from being saved:"
      %ul
        - @mproduct.errors.full_messages.each do |msg|
          %li= msg

  %table
    %tr
      .field
        %td= f.label :id
        %td= f.text_field :id, options = {:readonly => "readonly"}
    %tr
      .field
        %td= f.label :product_type
        %td
          - if @current_action == "new"
            = select("mproduct", "product_type", MERCHANT_CONFIG['product_types'].collect {|x| x['product_type']})
          - else
            = f.text_field :product_category, options = {:readonly => "readonly"}
    %tr
      .field
        %td= f.label :product_category
        %td
          = f.hidden_field :product_category
          - MERCHANT_CONFIG['product_types'].each do |pt|
            %select{:id => "pc-#{pt['product_type']}", :style => "display:none"}
              = options_for_select(pt['product_categories'])
    %tr
      .field
        %td= f.label :title
        %td= f.text_field :title
    %tr
      .field
        %td= f.label :body_html, "Description"
        %td= f.text_area :body_html, :size => "50x3"
    %tr
      .field
        %td= f.label :color
        %td= select("mproduct", "color", MERCHANT_CONFIG['product_tags']['color'].collect {|x| x[0]}, {}, {:multiple => 'multiple'})
    %tr
      .field
        %td= f.label :gender
        %td= select("mproduct", "gender", MERCHANT_CONFIG['product_tags']['gender'])
    %tr
      .field
        %td= f.label :brand
        %td= select("mproduct", "brand", MERCHANT_CONFIG['product_tags']['brand'].clone.insert(0,'').insert(0,current_user.username))
    %tr
      .field
        %td= f.label :onsale
        %td= select("mproduct", "onsale", MERCHANT_CONFIG['product_tags']['onsale'].collect {|x| [ x.to_s.capitalize, x ] })
    %tr
      .field
        %td= f.label :collectible
        %td= select("mproduct", "collectible", MERCHANT_CONFIG['product_tags']['collectible'].collect {|x| [ x.to_s.capitalize, x ] })
    %tr
      .field
        %td= f.label :custom
        %td= select("mproduct", "custom", MERCHANT_CONFIG['product_tags']['custom'].collect {|x| [ x.to_s.capitalize, x ] })
    %tr
      .field
        %td= f.label :vendor
        %td= f.text_field :vendor, options = {:readonly => "readonly"}
    %tr
      %td
      %td
        .actions
          = f.submit

